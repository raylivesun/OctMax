Ddoc

$(CHANGELOG_NAV_INJECT)

$(VERSION Dec 3, 2009, =================================================,

    $(WHATSNEW
        $(LI Conditional expressions ?: can now be modifiable lvalues.)
        $(LI The type inferred from an
         $(LINK2 $(ROOT_DIR)spec/expression.html#ArrayLiteral, $(I ArrayLiteral))
         is now a dynamic array, not a static one.)
        $(LI Added support for $(I op)= for array.length)
        $(LI Array and associative array types are now determined by using ?: across
         all the elements, not just using the first one.)
        $(LI Array concatenation with elements now allows implicit conversion of
         the elements to the array element type.)
        $(LI No more comma operators allowed between [ ].)
        $(LI ClassInfo now merged into TypeInfo_Class.)
        $(LI $(BUGZILLA 3379): [tdpl] Parameter names not visible in the if clause of a template)
        $(LI $(BUGZILLA 3380): [tdpl] typeid(obj) should return the dynamic type of the object)
        $(LI Removed $(B -safe) command line switch, added $(B -noboundscheck) command
         line switch.)
        $(LI $(BUGZILLA 3481): PATCH: opPow(), x ^^ y as a power operator)
        $(LI Added opDispatch)
        $(LI properties can only have 0 or 1 arguments)
        $(LI properties cannot be overloaded with non-properties)
        $(LI std.math: Added FloatControl, IeeeFlags for enabling floating-point exceptions.)
        $(LI std.math: Inverse trig functions are now pure nothrow.)
    )
    $(BUGSFIXED
        $(LI std.array: Fixed unlisted bug in array().)
        $(LI $(BUGZILLA 111): appending a dchar to a char[])
        $(LI $(BUGZILLA 2664): OSX standard math functions are less accurate)
        $(LI $(BUGZILLA 2802): VariantN.opCmp!(T) fails when T != VariantN)
        $(LI $(BUGZILLA 2967): spec does not mention that inline asm is a valid "return" statement)
        $(LI $(BUGZILLA 2977): std.random.unpredictableSeed() should use thread ID somewhere)
        $(LI $(BUGZILLA 3115): &gt;&gt;&gt; and &gt;&gt;&gt;= generate wrong code)
        $(LI $(BUGZILLA 3171): % not implemented correctly for floats)
        $(LI $(BUGZILLA 3311): std.range.chain shouldn't have opIndexAssign if arguments aren't mutable)
        $(LI $(BUGZILLA 3375): [tdpl] Ternary operator doesn't yield an lvalue)
        $(LI $(BUGZILLA 3381): [tdpl] Incorrect assessment of overriding in triangular-shaped hierarchy)
        $(LI $(BUGZILLA 3388): [tdpl] contracts should allow throw expressions)
        $(LI $(BUGZILLA 3390): [tdpl] out(result) contract should not be able to rebind result)
        $(LI $(BUGZILLA 3407): [tdpl] Compiling with -safe -release must keep all bound checks)
        $(LI $(BUGZILLA 3433): [tdpl] Comparing structs for equality is not member-by-member)
        $(LI $(BUGZILLA 3469): ICE(func.c): Regression. Calling non-template function as a template, from another module)
        $(LI $(BUGZILLA 3478): "no effect in expression" error on return to void)
        $(LI $(BUGZILLA 3494): Segfault(mtype.c) using typeof(return) inside an auto function)
        $(LI $(BUGZILLA 3495): Segfault(typinf.c) instantiating D variadic function with too few arguments)
        $(LI $(BUGZILLA 3496): ICE(cgelem.c, optimizer bug) cast(void *)(x&1)== null.)
        $(LI $(BUGZILLA 3502): Fix for dropped Mac OS X 10.5)
        $(LI $(BUGZILLA 3521): Optimized code access popped register)
        $(LI $(BUGZILLA 3540): Another DWARF line number fix)
        $(LI $(BUGZILLA 3551): nested struct => dmd adds a hidden pointer)
        $(LI $(BUGZILLA 3553): ICE when a function argument defaults to __LINE__)
    )
)
$(CHANGELOG_NAV_INJECT)

Macros:
        VER=2.037
        TITLE=Change Log: $(VER)
