Ddoc

$(CHANGELOG_NAV_INJECT)

$(VERSION Oct 29, 2010, =================================================,

    $(WHATSNEW
        $(LI added talign() and argTypes() to TypeInfo)
        $(LI Upgrade zlib support to zlib 1.2.5)
        $(LI std.stdio:  Added ByChunk. This struct is a InputRange like ByLine. File.byChunk returns ByChunk)
        $(LI std.traits:  Most higher-order ranges now work with const/immutable arrays and other ranges
        with a natural tail const, and ranges w/ const/immutable elements.)
        $(LI $(BUGZILLA 4888):  Heavy reliance on Bug 3534 in Phobos range usage)
        $(LI $(BUGZILLA 4987): C function pointer syntax needs to be deprecated)
        $(LI std.typecons:  Several improvements to the Tuple struct template:
            $(UL $(LI  Tuple members are now accessible with the syntax a[0], a[1] etc.)
                 $(LI  Eliminated an internal union. See $(BUGZILLA 4421) and $(BUGZILLA 4846).)
                 $(LI  Worked around $(BUGZILLA 4424). Got opAssign back.)
                 $(LI  Made Tuple.slice!(from, to) to preserve field names if any.)
                 $(LI  Added isTuple!(T) template.)
            ))
        $(LI std.algorithm: changed filter() such that filter is curryable)
        $(LI std.algorithm: Added function balancedParens)
    $(LI std.typecons: Deprecated defineEnum)
        $(LI Added relaxed purity checking rules.)
    )
    $(BUGSFIXED
        $(LI Unlisted bug:  std.exception.pointsTo() calls postblit on subobjects.)
        $(LI Unlisted bug:  std.typetuple.staticMap!() doesn't work with empty/single tuples.)
        $(LI Unlisted bug:  std.traits:  Interfaces should have indirections, aliasing, etc.)
        $(LI Unlisted bug:  std.socket:  Race condition - gethostbyname and gethostbyaddr on Linux return static data.  The call was synchronized, but using the data wasn't)
        $(LI Unlisted bug:  signed long comparisons under OS X)
        $(LI $(BUGZILLA 941): std.regexp fails to match when grouping certain sub-expressions)
        $(LI $(BUGZILLA 1482): std.file docs are insufficient)
        $(LI $(BUGZILLA 1635): DirEntry.isfile() and DirEntry.isdir() broken)
        $(LI $(BUGZILLA 1733): parse() function does not handle all build-in types)
        $(LI $(BUGZILLA 2073): Variant.coerce!() fails)
        $(LI $(BUGZILLA 2142): getopt() incorrectly processes bundled command-line options)
        $(LI $(BUGZILLA 2310): Inconsistent formatting of arrays in std.stdio.write() and std.conv.to!(string)())
        $(LI $(BUGZILLA 2424): std.functional binaryRevertArgs : "revert" should be "reverse")
        $(LI $(BUGZILLA 2451): Adding structs that use opAssign or postblit to an AA is broken)
        $(LI $(BUGZILLA 2655): Allow alternation patterns in std.path.fnmatch)
        $(LI $(BUGZILLA 2669): Variant does not have opApply or another iteration mechanism)
        $(LI $(BUGZILLA 2718): Inconsistent string parameters in Phobos functions)
        $(LI $(BUGZILLA 2838): std.file.rmdirRecurse fails)
        $(LI $(BUGZILLA 2930): Problems in std.range documentation)
        $(LI $(BUGZILLA 2943): Struct copying in presence of alias member this only copies alias this member)
        $(LI $(BUGZILLA 2965): std.date: timezone not initialized)
        $(LI $(BUGZILLA 3157): [patch] Pipes should be closed with pclose)
        $(LI $(BUGZILLA 3318): [PATCH]Rebindable.get is not accessible)
        $(LI $(BUGZILLA 3570): mkdirRecurse throws exception on trailing empty directory.)
        $(LI $(BUGZILLA 3602): ICE(tocsym.c) compiling a class, if its super class has preconditions)
        $(LI $(BUGZILLA 3665): Regression(1.051, 2.036) Assignment with array slicing does not work)
        $(LI $(BUGZILLA 4344): Sockets with multiple threads report missing/failed WSAStartup)
        $(LI $(BUGZILLA 4398): dmd always uses Windows name mangling for _d_throw)
        $(LI $(BUGZILLA 4439): The declaration of the in6addr_* in druntime is wrong.)
        $(LI $(BUGZILLA 4465): ICE(symbol.c): immutable type inference with ^^2)
        $(LI $(BUGZILLA 4524): Regression(2.026) Bus error with nested struct)
        $(LI $(BUGZILLA 4623): Non-integer type allowed as static array size)
        $(LI $(BUGZILLA 4634): typo in levenshteinDistanceAndPath documentation)
        $(LI $(BUGZILLA 4641): Associative arrays of structs with alias this broken.)
        $(LI $(BUGZILLA 4742): int % BigInt should work.)
        $(LI $(BUGZILLA 4775): No substitution on writef("%%%s", "hi").)
        $(LI $(BUGZILLA 4825): Regression(1.057, 2.040) "Error: non-constant expression" with -inline)
        $(LI $(BUGZILLA 4866): Static-to-dynamic converted manifest constant array gets non-converted type in static/constraint if)
        $(LI $(BUGZILLA 4869): auto return + inheritance + modules = compiler crashes(toctype.c))
        $(LI $(BUGZILLA 4873): Assertion failure: '0' on line 1483 in file 'expression.c')
        $(LI $(BUGZILLA 4882): std.traits hasUnsharedAliasing does not work for function type.)
        $(LI $(BUGZILLA 4897): CodeView: No locals or parameters are shown when debugging, because of missing function info)
        $(LI $(BUGZILLA 4890): GC.collect() deadlocks multithreaded program.)
        $(LI $(BUGZILLA 4925): [ICE] segfault with module-scope assert(0))
        $(LI $(BUGZILLA 4926): ICE: PREC_zero assertion failure due to unset precedence)
        $(LI $(BUGZILLA 4938): Regression(2.047) dmd segfault when compiling)
        $(LI $(BUGZILLA 4941): Built-in tuple slice boundaries are not CTFE'd)
        $(LI $(BUGZILLA 4949): ICE on invalid static if using value of 'this')
        $(LI $(BUGZILLA 4951):  InternetAddress fails to resolve host when multithreading.)
        $(LI $(BUGZILLA 4959): std.conv.parse error "no digits seen" on string starting with zero.)
        $(LI $(BUGZILLA 4992): ICE(glue.c) or segfault: using int[new])
        $(LI $(BUGZILLA 5003): regex(replace with delegate) sample doesn't work.)
        $(LI $(BUGZILLA 5026): ICE(expression.c) Incomplete mixin expression + char[] to char assignment)
        $(LI $(BUGZILLA 5049): std.algortihm.bringToFront() returns wrong value.)
        $(LI $(BUGZILLA 5052): take!(Take!R) should return Take!R, not Take!(Take!R).)
        $(LI $(BUGZILLA 5071): passing value by ref to a function with an inner dynamic closure results in a wrong code)
    )
)
$(CHANGELOG_NAV_INJECT)

Macros:
        VER=2.050
        TITLE=Change Log: $(VER)
