Ddoc

$(CHANGELOG_NAV_INJECT)

$(VERSION Aug 2, 2012, =================================================,

    $(WHATSNEW
        $(LI std.string: $(RED The current implementations of std.string.format and string.sformat are
             scheduled to be replaced in November 2012 with improved implementations
             which conform to writef. In some, rare cases, this will break code.
             Please see the documentation for std.string.format and std.string.sformat for details.))
        $(LI std.bitmanip: Added peek, read, write, and append for converting
             ranges of bytes to and from integral types.)
        $(LI std.container: Added DList, which is an implementation of a doubly-linked list.)
        $(LI Added std.file.tempDir which returns the path to a directory
             where a program can put temporary files.)
        $(LI std.process: Added escapeShellCommand, escapeShellFileName, and
             escapeWindowsArgument. Documented browse function.)
        $(LI std.range: Added RefRange, which effectively makes it possible to
             pass a range by reference.)
        $(LI std.traits: Added KeyType, ValueType, isScalarType, isBasicType, and
             SetFunctionAttributes templates.)
        $(LI std.utf: Added overload of codeLength which operates on a string.)
        $(LI std.traits: areAllSafe has been scheduled for deprecation. Please use
             allSatisfy(isSafe, ...) instead.)
        $(LI clear has been renamed to destroy, and clear (as an alias to destroy) has
             been scheduled for deprpecation.)
        $(LI Capitalized std.traits.pointerTarget to PointerTarget. Old one is
             scheduled for deprecation.)
        $(LI std.algorithm.indexOf - which was scheduled for deprecation - has been deprecated (it was
             easily confused with std.string.indexOf). Please use countUntil instead.)
        $(LI std.cpuid - which was scheduled for deprecation - has been deprecated.
             Please use core.cpuid instead.)
        $(LI std.conv.ConvError and ConvOverflowException - which were scheduled for deprecation - have
             been deprecated. Please catch ConvException and ConvOverflowException instead.)
        $(LI The overloads of std.conv.to which were scheduled for deprecation
             because formattedWrite replaced them have now been deprecated.
             Please use std.format.formattedWrite instead.)
        $(LI The overload of std.exception.enforce which takes the file and line number as template
             arguments has been scheduled for deprecation (as it causes unnecessary template bloat).
             Please use the overload which takes them as function arguments instead. This will have no
             effect on any calls to enforce which do not explicitly pass the file or line number.)
        $(LI std.format.FormatError - which was scheduled for deprecation - has been deprecated.
             Please catch FormatException instead.)
        $(LI std.file.listDir has been deprecated. Please use std.file.dirEntries instead.)
        $(LI std.range.replicate - which was scheduled for deprecation - has been deprecated.
             Please use repeat instead.)
        $(LI std.range.SortedRange.canFind - which was scheduled for deprecation - has been deprecated.
             Please use SortedRange.contains instead.)
        $(LI std.socket: timeval and linger - which were scheduled for deprecation - have been deprecated.
             Please use TimeVal and Linger.)
        $(LI std.stdio.isStreamingDevice has been scheduled for deprecation. Please use
             isFileHandle instead.)
        $(LI The deprecated std.typecons.defineEnum has been removed.)
        $(LI UtfException - which was scheduled for deprecation - has been deprecated.
             Please use UTFException instead.)
        $(LI The deprecated overloads of std.array.insert and std.array.replace
             have been removed. Please use insertInPlace and replaceInPlace instead.)
        $(LI The deprecated toISOExtendedString and fromISOExtendedString
             functions in std.datetime have been removed. Please use
             toISOExtString and fromISOExtString instead.)
        $(LI The deprecated std.file.getTimesPosix has been removed.
             Please use std.file.getTimes instead.)
        $(LI The deprecated overloads of isFile, isDir, and isSymLink in
             std.file which took uint have been removed. Please use
             attrIsFile, attrIsDir, and attrIsSymlink instead.)
        $(LI The deprecated std.file.DirEntry.timeStatusChanged has been removed.
             Please use std.file.DirEntry.attributes to get at that information
             if you need it.)
        $(LI The deprecated std.contracts module has been removed. Please use
             std.exception instead.)
        $(LI The deprecated std.arg, std.bind, and std.loader modules have been
             removed.)

        $(LI Added TypeInfo.rtInfo property to get library defined runtime info.)
        $(LI Added front end support for AVX 256 bit SIMD instructions.)
        $(LI Default arguments and parameter identifiers (if any) are added to the tuple generated from
        IsExpression's __parameters case.)
        $(LI Changed the way the align attribute works, to make it more usable and comprehensible.
        Default alignment has not changed.)
        $(LI The align attribute now accepts arbitrary powers of two. This affects layout
        of static data, too. Such effects are dependent on limitations of the object file format -
        currently Win32 programs cannot align on larger than 16 byte boundaries.)
        $(LI HTML input file support completely removed.)
        $(LI $(BUGZILLA 3150): cast from dynamic array to ulong is allowed)
        $(LI $(BUGZILLA 3866): anonymous delegate with default parameters cross-talks to another anonymous delegate)
        $(LI $(BUGZILLA 4174): Template interface functions not allowed, making operator overloads difficult)
        $(LI $(BUGZILLA 6652): 1. Warn modifying non ref variable if -w is specified.)
        $(LI $(BUGZILLA 7243): Compiler should call separate function when allocating a struct on the heap)
        $(LI $(BUGZILLA 7923): Please remove 'deprecated' from setAssertHandler())
        $(LI $(BUGZILLA 8105): in ref)
        $(LI $(BUGZILLA 8127): dmd link library paths not given precedence over gcc defaults)
        $(LI $(BUGZILLA 8221): typeof(null) rejected as return type for covariant overrides)
    )
    $(RUNTIMEBUGSFIXED
        $(LI $(BUGZILLA 6909): incorrect definition of the OVERLAPPED struct in core.sys.windows.windows ?)
    )
    $(LIBBUGSFIXED
        $(LI $(BUGZILLA 2328): setTypeInfo in gc.d backwards.)
        $(LI $(BUGZILLA 2588): std.signals should not use 'length' stealth keyword in indexing)
        $(LI $(BUGZILLA 4405): all function - returns whether predicate is true for all elements in a range)
        $(LI $(BUGZILLA 4603): array(iota(1, 0))  error)
        $(LI $(BUGZILLA 4605): Wrong print of an int[string] aa)
        $(LI $(BUGZILLA 4629): BufferedFile.printf() wants char[] as first argument)
        $(LI $(BUGZILLA 4695): std.range.zip is broken)
        $(LI $(BUGZILLA 4744): std.conv: string-&gt;enum doesn't look for longer match)
        $(LI $(BUGZILLA 4822): Problem with std.stdio.File.writef(&quot;%c&quot;)
        $(LI $(BUGZILLA 5011): std.container: SList linearRemove produces wrong results)
        $(LI $(BUGZILLA 5089): feqrel does not compile for floats)
        $(LI $(BUGZILLA 5260): std.math.feqrel() returns negative number)
        $(LI $(BUGZILLA 5346): instantiation of std.conv.toImpl and std.format.formatValue fails for unions)
        $(LI $(BUGZILLA 5354): formatValue: range templates introduce 3 bugs related to class &amp; struct cases)
        $(LI $(BUGZILLA 5786): std.algorithm.sort does not work with std.container.Array: Range violation)
        $(LI $(BUGZILLA 5843): Unable to convert a struct with an alias-this to long/ulong to int, using std.conv.to!int.)
        $(LI $(BUGZILLA 5970): fix BigInt.toString)
        $(LI $(BUGZILLA 6027): bigint to!string conversion and its implications)
        $(LI $(BUGZILLA 6175): String corruption when passing static char arrays to std.conv)
        $(LI $(BUGZILLA 6191): removechars doesn't accept a const string)
        $(LI $(BUGZILLA 6197): std.traits.isImplicitlyConvertible returns some wrong results.)
        $(LI $(BUGZILLA 6222): A problem with iota() using size_t)
        $(LI $(BUGZILLA 6231): [patch] std.conv.to/std.format.: Structs with toString and isInputRange match multiple templates.)
        $(LI $(BUGZILLA 6273): Tuple [] operator in pure function)
        $(LI $(BUGZILLA 6379): std.container.SList fails to compile)
        $(LI $(BUGZILLA 6437): Refcounted calls dtor before ctor, never calls dtor for globals)
        $(LI $(BUGZILLA 6547): Call to std.algorithm.remove causes compile error)
        $(LI $(BUGZILLA 6580): scoped classes are aligned incorrectly)
        $(LI $(BUGZILLA 6597): to!SomeString should use std.format.formatValue)
        $(LI $(BUGZILLA 6642): SysTime should not be hasUnsharedAliasing)
        $(LI $(BUGZILLA 6892): Formatted write with specified length of enum member)
        $(LI $(BUGZILLA 6926): std.process.system return wrong exit code)
        $(LI $(BUGZILLA 7022): File.byLine doesn't release file handle)
        $(LI $(BUGZILLA 7138): Can't call array() on dirEntries)
        $(LI $(BUGZILLA 7317): writeln cannot handle alias this of array type)
        $(LI $(BUGZILLA 7326): write interprets enum with byte backing type as a character)
        $(LI $(BUGZILLA 7348): to!string(null) matches more than one template declaration)
        $(LI $(BUGZILLA 7356): Implement KeyType, ValueType for hashes in std.traits)
        $(LI $(BUGZILLA 7360): Predicate templates in std.traits should consider alias this)
        $(LI $(BUGZILLA 7515): The new std.string.translate is slow for ASCII text)
        $(LI $(BUGZILLA 7537): `File.tmpfile` requires administrator rights on Windows)
        $(LI $(BUGZILLA 7561): std.net.curl broken)
        $(LI $(BUGZILLA 7660): toImpl conflict in std.conv)
        $(LI $(BUGZILLA 7796): std.typecons.Unique is using writeln without importing std.stdio)
        $(LI $(BUGZILLA 7824): isInputRange fails to recognize inout(T)[])
        $(LI $(BUGZILLA 7831): Unlisted @@@BUG in File.detach causes FILE* leaks when reopening)
        $(LI $(BUGZILLA 7878): A problem with purity and general templated algorithms)
        $(LI $(BUGZILLA 7898): [CTFE] std.algorithm:copy fails when used with two arrays)
        $(LI $(BUGZILLA 7909): to!(enum)(string) and to!(string)(enum) break when enum is integral)
        $(LI $(BUGZILLA 7919): Sample code works on GDC but fails with DMD)
        $(LI $(BUGZILLA 7936): std.random.randomSample always returns the same first value when passed a random number generator)
        $(LI $(BUGZILLA 7937): Range iota.Result should be const where possible)
        $(LI $(BUGZILLA 7944): std.range.iota.popFront() cycles when the range is empty)
        $(LI $(BUGZILLA 7948): std.range.zip broken with requireSameLength)
        $(LI $(BUGZILLA 7962): std.regex: Captures.length() returns incorrect value)
        $(LI $(BUGZILLA 7973): BigInt %= long/ulong gives wrong value)
        $(LI $(BUGZILLA 7975): Incorrect quotes escaping in std.format)
        $(LI $(BUGZILLA 7982): iota broken when start and end are unsigned and step is negative.)
        $(LI $(BUGZILLA 7993): BigInt divide-by-1 error)
        $(LI $(BUGZILLA 8003): Phobos uses deprecated std.path sep symbol)
        $(LI $(BUGZILLA 8011): BigInt ++ and -- do wrong thing on negative numbers)
        $(LI $(BUGZILLA 8015): std.typecons.Tuple does not support struct with alias method this)
        $(LI $(BUGZILLA 8022): BigInt division bug (2))
        $(LI $(BUGZILLA 8026): Fix or disallow randomShuffle() on fixed-sized arrays)
        $(LI $(BUGZILLA 8031): If a class have some signals it's impossible for a derived class to have any signals)
        $(LI $(BUGZILLA 8037): hasElaborateDestructor is false for non-zero-length static array of structs with elaborate destructor)
        $(LI $(BUGZILLA 8039): `scoped` doesn't call any elaborate destructors for struct fields)
        $(LI $(BUGZILLA 8040): writeln(null) too)
        $(LI $(BUGZILLA 8055): [Regression 2.059] std.algorithm.move corrupts moved object field)
        $(LI $(BUGZILLA 8057): std.algorithm.move cannot use for nested struct)
        $(LI $(BUGZILLA 8080): 'alias this' causes toString to be shadowed by aliased object)
        $(LI $(BUGZILLA 8112): std.algorithm.fill must accept InputRange)
        $(LI $(BUGZILLA 8158): std.algorithm.min fails to compile with user-defined types)
        $(LI $(BUGZILLA 8164): BigInt from char[] too)
        $(LI $(BUGZILLA 8165): BigInt opAssign return value)
        $(LI $(BUGZILLA 8171): [Regression 2.060head] Broken std.algorithm.move for nested struct has no member)
        $(LI $(BUGZILLA 8186): Formatting class object has an alias this to int* field is broken.)
        $(LI $(BUGZILLA 8187): replaceFirst doesn't work for string[] haystack)
        $(LI $(BUGZILLA 8191): cstream.printf is completely unusable on x86_64)
        $(LI $(BUGZILLA 8195): Segfault when comparing a VariantN to a non-variant type which it holds)
        $(LI $(BUGZILLA 8203): Use of std.regex.match() generates &quot;not enough preallocated memory&quot; error)
        $(LI $(BUGZILLA 8214): blocking option for TaskPool.finish())
        $(LI $(BUGZILLA 8233): std.array.array fails to compile with ranges of immutable elements which have a length property)
        $(LI $(BUGZILLA 8240): std.algorithm.joiner and empty inputRangeObject)
        $(LI $(BUGZILLA 8264): [std.conv.to] constructing conversion doesn't work with alias this)
        $(LI $(BUGZILLA 8310): writeln of Range of fixed size array)
        $(LI $(BUGZILLA 8323): std.string.chompPrefix does not handle differing string types properly)
        $(LI $(BUGZILLA 8362): std.traits.isSafe doesn't work with unsafe lamdba functions)
        $(LI $(BUGZILLA 8386): writeln stopped working with wstring)
        $(LI $(BUGZILLA 8398): enforceEx cannot be used with OutOfMemoryError)
        $(LI $(BUGZILLA 8450):  std.traits.isSafe doesn't work with unsafe lamdba functions)
    ))
    $(DMDBUGSFIXED
        $(LI $(BUGZILLA 1175): nested class inheritance)
        $(LI $(BUGZILLA 1780): Type tuple deduction failure for class templates)
        $(LI $(BUGZILLA 2472): Delegates are not lvalue.)
        $(LI $(BUGZILLA 2962): ICE(glue.c) or bad codegen passing variable as template value parameter)
        $(LI $(BUGZILLA 3290): accepts-invalid: non-const by-ref foreach over a const array is accepted)
        $(LI $(BUGZILLA 3574): post-condition in void main() is not evaluated if there is no return statement)
        $(LI $(BUGZILLA 3608): Allow isExpression and templates to capture template parameters and FQN of template)
        $(LI $(BUGZILLA 3703): static array assignment)
        $(LI $(BUGZILLA 3895): Appending a double[] to a float[] generates wrong code)
        $(LI $(BUGZILLA 4024): Last catch only accepts block statement)
        $(LI $(BUGZILLA 4155): return of NaN to temporary fails equality test)
        $(LI $(BUGZILLA 4288): Error on passing delegate to C linkage function)
        $(LI $(BUGZILLA 4364): ICE(class.c) compiling a struct def named 'Object' followed by a class definition)
        $(LI $(BUGZILLA 4510): [tdpl] ref with a wrong type specifier is accepted)
        $(LI $(BUGZILLA 4583): PIC code not working: EBX register set incorrectly)
        $(LI $(BUGZILLA 4785): auto return of a function with in contract)
        $(LI $(BUGZILLA 4884): Using template struct parameters in method definition fails with "parameter _param_0 is already defined")
        $(LI $(BUGZILLA 4953): Regression(2.031): templates don't do implicit conversion properly)
        $(LI $(BUGZILLA 4967): member default initializers not working in static struct initializers)
        $(LI $(BUGZILLA 5039): Cannot use invariant() with auto methods)
        $(LI $(BUGZILLA 5082): delegate alias parameters are silently accepted inside structs. limits most of std.algorithm, etc.)
        $(LI $(BUGZILLA 5435): Static foreach over tuple ignores type annotation)
        $(LI $(BUGZILLA 5437): Problems with length of std.traits.EnumMembers)
        $(LI $(BUGZILLA 5473): Members of const-qualified classes are not const themselves.)
        $(LI $(BUGZILLA 5737): postblit not called for locals initialized from ref functions)
        $(LI $(BUGZILLA 5809): [64 bit] wrong code for *p==0, when widening conversion occurs)
        $(LI $(BUGZILLA 5896): const overload matching is succumb to template parameter one)
        $(LI $(BUGZILLA 6189): [64bit] optimizer: register content destroyed in function prolog)
        $(LI $(BUGZILLA 6199): [GSoC] Postblit not called when returning a reference to a by-value function)
        $(LI $(BUGZILLA 6470): postblits not called on arrays of structs)
        $(LI $(BUGZILLA 6475): template identifier is not a member of alias)
        $(LI $(BUGZILLA 6591): di header generation loses selective import symbols)
        $(LI $(BUGZILLA 6612): Associative arrays with associative array keys literals)
        $(LI $(BUGZILLA 6636): Destructors of static array elements are not called on function parameter)
        $(LI $(BUGZILLA 6637): Postblits of static array elements are not called on function argument)
        $(LI $(BUGZILLA 6758): std.c.stdarg problems with 8 or more integer arguments on x86_64)
        $(LI $(BUGZILLA 6891): template with uint value parameter causes several issues)
        $(LI $(BUGZILLA 7396): Indicate default alignment with 0.)
        $(LI $(BUGZILLA 7385): Bad error message missing line number on invalid array op that isn't special cased)
        $(LI $(BUGZILLA 7413): Vector literals don't work)
        $(LI $(BUGZILLA 7414): Vector literal assignment doesn't work in global scope)
        $(LI $(BUGZILLA 7418): Overloading doesn't work with aliases declared inside templates)
        $(LI $(BUGZILLA 7453): Can't return value from within opApply)
        $(LI $(BUGZILLA 7478): stack overflow compiling with -deps -release -inline -noboundscheck)
        $(LI $(BUGZILLA 7494): Selective import does not work inside a function)
        $(LI $(BUGZILLA 7506): Postblit does not called properly with inlining)
        $(LI $(BUGZILLA 7530): Postblit not called structs returned from an array index expr.)
        $(LI $(BUGZILLA 7560): Base class overloaded methods created by mixins can't be overriden)
        $(LI $(BUGZILLA 7581): Compiler uses wrong instructions to move complex value from ST to xmm registers)
        $(LI $(BUGZILLA 7585): functions in templates inferred as delegate)
        $(LI $(BUGZILLA 7750): while(true) loop with try/catch block causes segfault)
        $(LI $(BUGZILLA 7770): __dollar cannot be read at compile time)
        $(LI $(BUGZILLA 7784): ICE with self-referencing literals)
        $(LI $(BUGZILLA 7793): static assert( void_function() ) gives misleading error message)
        $(LI $(BUGZILLA 7807): Ambiguous virtual function error on const overloading with covariant return types)
        $(LI $(BUGZILLA 7851): Internal error: e2ir.c 688)
        $(LI $(BUGZILLA 7880): [CTFE] cast from void array allowed with different results than at runtime)
        $(LI $(BUGZILLA 7893): Spec completely wrong for D variadic arguments on 64 bits)
        $(LI $(BUGZILLA 7894): [CTFE] - goto within ForStatement restarts loop)
        $(LI $(BUGZILLA 7906): [ICE] enum declaration with invalid array literal crashes dmd)
        $(LI $(BUGZILLA 7907): [ICE] invalid expression on template argument crashes dmd)
        $(LI $(BUGZILLA 7911): Nested static if failing to execute)
        $(LI $(BUGZILLA 7922): alias this causes weird formatting issues for strings)
        $(LI $(BUGZILLA 7929): Broken semantic of StructInitializer with const)
        $(LI $(BUGZILLA 7931): Error message with _error_ with var[1,2])
        $(LI $(BUGZILLA 7932): Corrupted argument inside out contract in x86_64)
        $(LI $(BUGZILLA 7933): Illegal interaction of templates)
        $(LI $(BUGZILLA 7941): Regression(2.059): Type check is ignored when manifest constant initializer is function literal)
        $(LI $(BUGZILLA 7943): UFCS does not work with alias this)
        $(LI $(BUGZILLA 7945): alias this doesn't work on function ref parameter)
        $(LI $(BUGZILLA 7949): [ICE] (cgcod.c) with SIMD array)
        $(LI $(BUGZILLA 7950): Type tuples are incorrectly flattened in base type list of interface)
        $(LI $(BUGZILLA 7951): DMD: Internal error: backend/cgxmm.c 567)
        $(LI $(BUGZILLA 7965): Invalid outer function scope pointer in some cases)
        $(LI $(BUGZILLA 7974): forward reference of mixin declaration)
        $(LI $(BUGZILLA 7983): ICE with getMember on a unittest member)
        $(LI $(BUGZILLA 7987): [CTFE] cannot compare arrays of slices)
        $(LI $(BUGZILLA 8002): Excess initial errors when passing template args to non-templated struct)
        $(LI $(BUGZILLA 8004): Direct call of function literal should consider default arguments)
        $(LI $(BUGZILLA 8005): Lambda with parameter type inference should consider default args)
        $(LI $(BUGZILLA 8016): Methods defined in external object files when template alias parameter is involved)
        $(LI $(BUGZILLA 8032): `mixin template` before virtual method with same method causes an error)
        $(LI $(BUGZILLA 8036): Zero-length static array of structs with elaborate destructor as struct or class field is rejected)
        $(LI $(BUGZILLA 8038): #line which is in a double template instantiation doesn't work)
        $(LI $(BUGZILLA 8060): xmmstore cannot allocate store for optimized operation that uses int and floats)
        $(LI $(BUGZILLA 8064): return reference semantics not obeyed on delegates?)
        $(LI $(BUGZILLA 8066): ICE on missing return statement if invariant is present)
        $(LI $(BUGZILLA 8069): incorrect ambiguous virtual function error)
        $(LI $(BUGZILLA 8073): Regression (git) Error: undefined identifier __result)
        $(LI $(BUGZILLA 8089): Importing package as module causes segfault)
        $(LI $(BUGZILLA 8091): Optimizer generates wrong code when reducing comparisons)
        $(LI $(BUGZILLA 8094): Static if matching using alias parameter in template fails)
        $(LI $(BUGZILLA 8095): [64 bit] Wrong code generation with spilled register, -m64 -O)
        $(LI $(BUGZILLA 8098): Inner class method can modify outer's members regardless of constancy)
        $(LI $(BUGZILLA 8099): Inner class's outer pointer matches constancy of inner, but can be set to object of arbitrary constancy)
        $(LI $(BUGZILLA 8182): with a lazy struct parameter, the struct's destructor is called on the generated delegate)
        $(LI $(BUGZILLA 8180): UFCS writeln doesn't work with Tuples)
        $(LI $(BUGZILLA 8113): alias this doesn't forward opCall)
        $(LI $(BUGZILLA 8123): alias declaration lookup is broken)
        $(LI $(BUGZILLA 8125): TypeInstance dedunction problem)
        $(LI $(BUGZILLA 8129): Cannot deduce template function when using partially specified type in function parameter)
        $(LI $(BUGZILLA 8147): Blah!R.init now requires parens - (Blah!R).init)
        $(LI $(BUGZILLA 8168): dmd crashes when asm statement with wrong opcode)
        $(LI $(BUGZILLA 8169): Method loses its compile-time evaluability when used through alias this)
        $(LI $(BUGZILLA 8185): Pure functions and pointers)
        $(LI $(BUGZILLA 8188): need this to access member when mixining in a function)
        $(LI $(BUGZILLA 8190): Externally defined struct error message)
        $(LI $(BUGZILLA 8194): "Function cannot access frame" even though all I requested was the type)
        $(LI $(BUGZILLA 8198): Nested lambda inference doesn't work)
        $(LI $(BUGZILLA 8199): stack is not aligned in finally block)
        $(LI $(BUGZILLA 8212): shared value data structures should implicitly cast to mutable)
        $(LI $(BUGZILLA 8216): CTFE should allow 'pointer is inside range' comparisons)
        $(LI $(BUGZILLA 8226): Global lambda assign to const/immutable)
        $(LI $(BUGZILLA 8237): Error message with _error_ when using failed type inference in template parameter)
        $(LI $(BUGZILLA 8241): cannot use template function literal as default alias argument)
        $(LI $(BUGZILLA 8242): cannot use template function literals at module scope)
        $(LI $(BUGZILLA 8249): Spurious error message with templates and alias this)
        $(LI $(BUGZILLA 8252): no UFCS for 0 literal)
        $(LI $(BUGZILLA 8276): [CTFE] ICE when reading variable from nested function)
        $(LI $(BUGZILLA 8283): ICE(cod1.c): returning struct with constructor as member of another struct)
        $(LI $(BUGZILLA 8315): Invalid nested-ref check in template constraint)
        $(LI $(BUGZILLA 8335): `ref` is ignored for static array of stucts with postblit argument)
        $(LI $(BUGZILLA 8390): Refused array operation mutable[] += const[])
        $(LI $(BUGZILLA 8397): parameter types are not checked when assigning a function literal)
        $(LI $(BUGZILLA 8423): Wrong code for bool parameter in 5th integer register.)
        $(LI $(BUGZILLA 8429): [2.060 beta] 'version' rejected inside 'static if's)
        $(LI $(BUGZILLA 8434): [Regression 2.058] cannot implicitly convert expression (vs1.opCast()) of type const(Vector2D) to object.Object)
        $(LI $(BUGZILLA 8437): [2.060 beta] static struct no size yet for forward reference)
        $(LI $(BUGZILLA 8442): [2.060 beta] Empty array enum not treated as immutable)
        $(LI $(BUGZILLA 8453): Associative array keys refused as property by sort)
        $(LI $(BUGZILLA 8454): [ICE] (backend\cg87.c 3497) with cdouble and sqrt)
    )
)
$(CHANGELOG_NAV_INJECT)

Macros:
        VER=2.060
        TITLE=Change Log: $(VER)
