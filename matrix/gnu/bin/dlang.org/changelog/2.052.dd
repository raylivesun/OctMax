Ddoc

$(CHANGELOG_NAV_INJECT)

$(VERSION Feb 17, 2011, =================================================,

    $(WHATSNEW
        $(LI 64 bit support for Linux)
        $(LI Implemented $(I exception chaining), as described in TDPL. Currently Windows-only.)
        $(LI std.random: Added Xorshift random generator)
        $(LI Support HTML5 entities)
        $(LI Added std.datetime for handling dates and times. std.date and std.gregorian
             are now scheduled for deprecation. Any functions in other modules of Phobos
             which used std.date.d_time have been changed to use std.datetime.SysTime or
             are scheduled for deprecation with new functions with the same functionality
             added which use SysTime (done in cases where switching existing functions to
             use SysTime would have broken code). New code should use std.datetime instead
             of std.date.)
        $(LI Various functions in std.file were renamed to match Phobos' naming
             conventions (e.g. isFile instead of isfile). The old names are aliased
             and scheduled for deprecation.)
    )
    $(BUGSFIXED
        $(LI $(BUGZILLA 190): Cannot forward reference typedef/alias in default value for function parameter)
        $(LI $(BUGZILLA 1513): try/catch/finally misbehavior on windows)
        $(LI $(BUGZILLA 1899): AA of fixed-length arrays fails to initialize)
        $(LI $(BUGZILLA 1914): Array initialisation from const array yields memory trample)
        $(LI $(BUGZILLA 2581): DDoc doesn't work for functions with auto return type.)
        $(LI $(BUGZILLA 2810): Bogus forward reference error with auto function)
        $(LI $(BUGZILLA 2874): phobos docs issues)
        $(LI $(BUGZILLA 3198): wrong initializer for structs arrays)
        $(LI $(BUGZILLA 3334): std.demangle doesn't parse ref, pure, nothrow)
        $(LI $(BUGZILLA 3681): ICE(go.c): when function takes too long to optimize, only with -O.)
        $(LI $(BUGZILLA 3848): functions in std.file don't take symbolic links into account)
        $(LI $(BUGZILLA 4013): Inconsistent codeview debug info for classes derived from IUnknown)
        $(LI $(BUGZILLA 4069): Issue 4069 - std.xml.Document.pretty saves empty elements with spaces and line breaks)
        $(LI $(BUGZILLA 4245): Declaring conflicting symbols in single function scope allowed)
        $(LI $(BUGZILLA 4307): spawn()'ed thread doesn't terminate)
        $(LI $(BUGZILLA 4328): templated unittests fail to link when instantiated from other file if compiler order isn't correct)
        $(LI $(BUGZILLA 4379): ICE(blockopt.c): foreach over huge tuple, only with -O)
        $(LI $(BUGZILLA 4389): ICE(constfold.c, expression.c), or wrong code: string~=dchar in CTFE)
        $(LI $(BUGZILLA 4486): CodeView debug info should contain absolute path names)
        $(LI $(BUGZILLA 4598): std.xml check is too restrictive)
        $(LI $(BUGZILLA 4601): Spawned threads frequently don't terminate or let other threads ever run if you spawn more than one thread)
        $(LI $(BUGZILLA 4732): __traits(identifier) performs constant folding on symbols)
        $(LI $(BUGZILLA 4753): fail_compilation/fail116.d sends dmd into a loop, exhausting memory)
        $(LI $(BUGZILLA 4807): Examples for std.array insert and replace)
        $(LI $(BUGZILLA 4852): core.demangle cannot demangle functions with class/struct return types)
        $(LI $(BUGZILLA 4878): Ddoc: Default arguments can break Ddoc output)
        $(LI $(BUGZILLA 4913): Implicit opCast!bool in if statement doesn't work with declarator)
        $(LI $(BUGZILLA 4973): map file with spaces in file name passed without quotes to linker)
        $(LI $(BUGZILLA 5025): ICE(cast.c) shared struct literal)
        $(LI $(BUGZILLA 5090): ICE(todt.c) struct literal initializing zero length array)
        $(LI $(BUGZILLA 5105): Member function template cannot be synchronized)
        $(LI $(BUGZILLA 5197): Ddoc: access-attributed auto template function crashes dmd)
        $(LI $(BUGZILLA 5198): Appender much slower when appending ranges of elements than individual elements)
        $(LI $(BUGZILLA 5209): posix/sys/select.d: FD_ISSET function should return bool)
        $(LI $(BUGZILLA 5221): entity.c: Merge Walter's list with Thomas')
        $(LI $(BUGZILLA 5242): self referencing template constraint crashes compiler)
        $(LI $(BUGZILLA 5244): PATCH: fix use of uninitialised variable in toObj.c)
        $(LI $(BUGZILLA 5246): PATCH(s): fix a couple more uninitialised variables)
        $(LI $(BUGZILLA 5248): CTFE Segfault when calling a function on an enum struct)
        $(LI $(BUGZILLA 5271): Not constant RAND_MAX)
        $(LI $(BUGZILLA 5320): gcstub/gc.d: SEGV because of missing returns)
        $(LI $(BUGZILLA 5349): ICE(toir.c): nested class in static member function)
        $(LI $(BUGZILLA 5365): Regression (2.051) implicit conversions via alias this are broken)
        $(LI $(BUGZILLA 5381): Regression (2.051) switch fails for wstring and dstring)
        $(LI $(BUGZILLA 5382): [regression 2.051] DLL multi-threading broken)
        $(LI $(BUGZILLA 5391): Crash with recursive alias declaration)
        $(LI $(BUGZILLA 5400): Add const to FD_ISSET)
        $(LI $(BUGZILLA 5439): 64bit struct alignment inconsistent with C ABI)
        $(LI $(BUGZILLA 5447): Should be illegal to throw a non-Throwable)
        $(LI $(BUGZILLA 5455): ICE(cgcod.c): Optimization (register allocation?) regression in DMD 1.065)
        $(LI $(BUGZILLA 5486): Missing define for running dmd as 64 bit)
        $(LI $(BUGZILLA 5488): Spawned threads hang in a way that suggests allocation or gc issue)
        $(LI $(BUGZILLA 5504): Regression(2.051): Template member functions of a shared class don't compile)
        $(LI $(BUGZILLA 5534): [64-bit] Inexplicable segfault in small code snippet, -O -release -m64 only)
        $(LI $(BUGZILLA 5536): Array append with dollar op on 64-bit)
        $(LI $(BUGZILLA 5545): [64-bit] DMD fails to postincrement ubytes.)
        $(LI $(BUGZILLA 5549): [64-bit] Internal error: backend/cgcod.c 1845)
        $(LI $(BUGZILLA 5552): std.datetime.d DosFileTimeToSysTime has a bug)
        $(LI $(BUGZILLA 5556): [64-bit] Wrong Implicit Conversion to Double)
        $(LI $(BUGZILLA 5557): [64-Bit] FP (alignment?) issues with Rvalues)
        $(LI $(BUGZILLA 5564): [64-bit] loading of wrong constant byte value)
        $(LI $(BUGZILLA 5565): [64-bit] Wrong Floating Point Results, Related to Mixing With size_t)
        $(LI $(BUGZILLA 5566): [64-bit] More erratic FP results with size_t)
        $(LI $(BUGZILLA 5579): Segfault on first call to GC after starting new thread)
        $(LI $(BUGZILLA 5580): [64-bit] String switch statements broken in 64-bit mode)
        $(LI $(BUGZILLA 5581): [64-bit] Wrong code with bitwise operations on bools)
        $(LI $(BUGZILLA 5592): Previous definition different: __arrayExpSliceMulSliceAddass_d)
        $(LI $(BUGZILLA 5595): Compiler crash on heavy std.algorithm use)
    )
)
$(CHANGELOG_NAV_INJECT)

Macros:
        VER=2.052
        TITLE=Change Log: $(VER)
