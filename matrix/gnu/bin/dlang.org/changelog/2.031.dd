Ddoc

$(CHANGELOG_NAV_INJECT)

$(VERSION July 6, 2009, =================================================,

    $(WHATSNEW
        $(LI Renamed root directory \dmd to \dmd2)
        $(LI Use of with symbols that shadow local symbols is no longer allowed)
        $(LI Added $(LINK2 $(ROOT_DIR)spec/statement.html#FinalSwitchStatement, final
         switch statements))
        $(LI Added $(LINK2 $(ROOT_DIR)spec/statement.html#CaseRangeStatement, case range
         statements))
        $(LI Implicit integral conversions that could result in loss of significant
        bits are no longer allowed.)
        $(LI Warning on no return expr; is now an error.)
        $(LI $(BUGZILLA 3080): dmd should output compilation errors to stderr, not stdout)
        $(LI $(BUGZILLA 3122): [patch] Adding support for fast and reliable build tools to the frontend)
        $(LI std.algorithm: Made std.algorithm.swap faster by having it use memcpy; added std.algorithm.group, std.algorithm.until, std.algorithm.nWayUnion, std.algorithm.largestPartialIntersectionWeighted; added additional constraints to std.algorithm.equal; changed signature of std.algorithm.topNIndex and std.algorithm.topNCopy to use an enum parameter instead of a confusing bool.)
        $(LI std.array: added array function.)
        $(LI std.conv: added Shin Fujishiro's code for printing and parsing enumerated values.)
        $(LI std.ctype: made isupper and tolower pure.)
        $(LI std.date: changed signature of benchmark to return ulong[] instead of uint[].)
        $(LI std.demangle: changed it to use the snazzy switch statement with ranged labels.)
        $(LI std.random: added randomSample)
        $(LI std.string: deprecated std.string.find and std.string.find, replaced with std.string.indexOf; deprecated std.string.rfind and std.string.irfind, replaced with std.string.lastIndexOf; added flag CaseSensitive for indexOf and lastIndexOf; removed startsWith and endsWith because std.algorithm defines them; defined std.string.byDchar.)
        $(LI std.traits: added isSomeChar, isPointer.)
        $(LI std.typetuple: replaced indexOf with indexOfType, kept the old name as an alias that will be deprecated.)
        $(LI std.utf: improved error messages.)
    )
    $(BUGSFIXED
        $(LI Fix dmd crash on multicore Windows.)
        $(LI Fixed unlisted bug in std.algorithm.startsWith)
        $(LI Fixed unlisted bug in std.algorithm.topN)
        $(LI Fixed unlisted bug in std.algorithm.topNIndex (empty index made it crash))
        $(LI Fixed unlisted bug in std.algorithm.setIntersection)
        $(LI Fixed unlisted bug in std.range.retro: retro'izing a range twice must return the original range)
        $(LI $(BUGZILLA 106): template - mixin sequence)
        $(LI $(BUGZILLA 810): Cannot forward reference template)
        $(LI $(BUGZILLA 852): ICE(toir.c) using local class in non-static nested function in nested static function)
        $(LI $(BUGZILLA 1343): Various errors with static initialization of structs and arrays)
        $(LI $(BUGZILLA 1358): ICE(root.c) on Unicode codepoints greater than 0x7FFFFFFF)
        $(LI $(BUGZILLA 1524): ICE(constfold.c) on using "is" with strings in CTFE)
        $(LI $(BUGZILLA 1984): Assertion failure: 'e1->type' on line 1198 in file 'constfold.c')
        $(LI $(BUGZILLA 2323): ICE(cgcs.c): taking address of a method of a temporary struct)
        $(LI $(BUGZILLA 2399): ICE(cgcod.c) on casting function to delegate)
        $(LI $(BUGZILLA 2429): std.stream.File incorrect flag parsing and sharing mode)
        $(LI $(BUGZILLA 2432): complex alias -> mtype.c:125: virtual Type* Type::syntaxCopy(): Assertion `0` failed.)
        $(LI $(BUGZILLA 2603): ICE(cgcs.c) on subtracting string literals)
        $(LI $(BUGZILLA 2843): ICE(constfold.c) with is-expression with invalid dot-expression in is-expression involving typeid)
        $(LI $(BUGZILLA 2865): RandomCover not random)
        $(LI $(BUGZILLA 2875): ICE(cgcod.c) setting delegate = $(AMP)Struct.func)
        $(LI $(BUGZILLA 2884): ICE: Assert: 'template.c', line 3773, 'global.errors')
        $(LI $(BUGZILLA 2888): [PATCH] speedup for float * 2.0)
        $(LI $(BUGZILLA 2900): Array appending slowed drastically since integration of druntime)
        $(LI $(BUGZILLA 2915): [Patch]: Optimize -a*-b into a*b)
        $(LI $(BUGZILLA 2923): -O generates bad code for ?:)
        $(LI $(BUGZILLA 2932): bad e_ehsize (36 != 52))
        $(LI $(BUGZILLA 2952): Segfault on exit when using array ops with arrays of doubles larger than 8 elements)
        $(LI $(BUGZILLA 2974): Segfault(mtype.c) on auto function)
        $(LI $(BUGZILLA 2981): Bad code generation for structs containing invariants)
        $(LI $(BUGZILLA 2982): Assertion failure in function if() clause)
        $(LI $(BUGZILLA 3003): Need to implicitly add () on member template function calls)
        $(LI $(BUGZILLA 3014): ICE(template.c) instantiating template with tuple)
        $(LI $(BUGZILLA 3016): Errors in the documentation of std.math.acos)
        $(LI $(BUGZILLA 3026): Segfault with incomplete static array initializer)
        $(LI $(BUGZILLA 3044): Segfault(template.c) instantiating struct tuple constructor with zero arguments.)
        $(LI $(BUGZILLA 3071): nested func declaration parse problem)
        $(LI $(BUGZILLA 3078): NaN reported as equal to zero)
        $(LI $(BUGZILLA 3081): unaryFun can't be used to get element out of struct.)
        $(LI $(BUGZILLA 3095): wc example for D2 doesn't compile)
        $(LI $(BUGZILLA 3114): optlink failing on multicore machines)
        $(LI $(BUGZILLA 3117): dmd crash by *1)
        $(LI $(BUGZILLA 3121): recurrence does not generate the correct numbers)
        $(LI $(BUGZILLA 3128): Internal error: ..\ztc\cod4.c 2737)
        $(LI $(BUGZILLA 3130): Crashed with triple stars)
    )
)
$(CHANGELOG_NAV_INJECT)

Macros:
        VER=2.031
        TITLE=Change Log: $(VER)
