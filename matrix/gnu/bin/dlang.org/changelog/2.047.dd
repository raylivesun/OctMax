Ddoc

$(CHANGELOG_NAV_INJECT)

$(VERSION Jun 11, 2010, =================================================,

    $(WHATSNEW
        $(LI Changed "op=" to just "op" for template argument to opOpAssign)
        $(LI std.algorithm: Added save() to forward ranges; added split() using only one element as separator; added indexOf; fixed unlisted bug in startsWith and endsWith; added skipOver(); added canFind().)
        $(LI std.array: Added implementation of save() for T[]s.)
        $(LI std.concurrency: Eliminated spurious unittest stdout messages.)
        $(LI std.container: Added.)
        $(LI std.conv: Added file and line information to conversion errors; added brackets '[' and ']' around arrays and associative arrays as defaults; added emplace() for non-class types.)
        $(LI std.file: Replaced exception upon out-of-memory error with assert(0).)
        $(LI std.functional: toDelegate now accepts callable(function pointers, delegates and objects implement opCall) )
        $(LI std.path: Made basename() generic in string type.)
        $(LI std.range: Added the existence of the property save as a condition for isForwardRange; added save to the range defined within; replaced a couple of awkward front() implementations; defined module-level moveFront() and range member moveFront() where appropriate; added @property maxLength to Take; arranged things such that take() for slice-able ranges returns the same type as the slice; eliminated SListRange; defined iota() with one argument; moved BinaryHeap within.)
        $(LI std.regex: Qualified indexOf with std.algorithm.)
        $(LI std.regexp: Qualified indexOf with std.algorithm.)
        $(LI std.stdio: Added an error message to enforce() in rawRead().)
        $(LI std.string: Improved indexOf(), tolower(), splitter(), chomp().)
        $(LI std.traits: Added templates to get compile-time information about functions.)
        $(LI std.typecons: Added AutoImplement.)
        $(LI std.utf: Eliminated decodeFront() and decodeBack() - they aren't needed since strings are bidirectional ranges.)
        $(LI $(BUGZILLA 2008): Poor optimization of functions with ref parameters)
        $(LI $(BUGZILLA 3793): Functions with static arrays as arguments are not inlined)
        $(LI $(BUGZILLA 4296): Reduce parasitic error messages)
    )
    $(BUGSFIXED
        $(LI $(BUGZILLA 1193): regression: "matches more than one template declaration" doesn't list the location of the conflicting templates)
        $(LI $(BUGZILLA 1894): scope(exit) is ignored except in compound statements)
        $(LI $(BUGZILLA 1941): missing line on inaccesable external private module member)
        $(LI $(BUGZILLA 2127): inliner turns struct "return *this" from by-value into by-ref)
        $(LI $(BUGZILLA 2276): Error message missing line number on array operation)
        $(LI $(BUGZILLA 2546): Array Ops silently fail when no slice symbol is used.)
        $(LI $(BUGZILLA 2738): Rebindable should work for interfaces.)
        $(LI $(BUGZILLA 2835): std.socket.TcpSocket doesn't actually connect)
        $(LI $(BUGZILLA 2881): x.stringof returns typeof(x).stringof when x is an enum)
        $(LI $(BUGZILLA 3064): Invalid array operation accepted, generates bad code)
        $(LI $(BUGZILLA 3088): std.xml.check() fails on xml comments)
        $(LI $(BUGZILLA 3139): compiler dies "Error: out of memory" with case range)
        $(LI $(BUGZILLA 3200): std.xml doesn't follow spec for Tag.text)
        $(LI $(BUGZILLA 3323): Segfault or ICE(e2ir.c) using struct with destructor almost anywhere)
        $(LI $(BUGZILLA 3398): Attributes inside a union screws data alignment)
        $(LI $(BUGZILLA 3465): isIdeographic can be wrong in std.xml)
        $(LI Major improvements to CustomFloat, fixing $(BUGZILLA 3520):  std.numeric.CustomFloat horribly broken)
        $(LI $(BUGZILLA 3538): Default value of alias template parameter is instantiated only once.)
        $(LI $(BUGZILLA 3547): for option -od for relative path the path is added twice)
        $(LI $(BUGZILLA 3548): ICE occurs when an array is returned from a function is incorrectly used in an array op expression.)
        $(LI $(BUGZILLA 3604): extern(C) callable function with array parameters broken)
        $(LI $(BUGZILLA 3651): mangleof broken for enums)
        $(LI $(BUGZILLA 3653): Problem sorting array of Rebindable)
        $(LI $(BUGZILLA 3658): Crashing on vector operations (Mac only))
        $(LI $(BUGZILLA 3662): Wrong compile error within struct constructor and C-style initializer)
        $(LI $(BUGZILLA 3667): Regression(D2 only): broken out(result) in contracts)
        $(LI $(BUGZILLA 3786): bug in std.string.removechars)
        $(LI $(BUGZILLA 3854): Error on static initialization of arrays with trailing comma.)
        $(LI $(BUGZILLA 3873): std.range.repeat should have popBack defined)
        $(LI $(BUGZILLA 3876): std.range.Take back/popBack methods don't work correctly)
        $(LI $(BUGZILLA 3880): std.regex functions with const/immutable Regex object)
        $(LI $(BUGZILLA 4003): The result changes only with the order of source files.)
        $(LI $(BUGZILLA 4045): [CTFE] increasing array length)
        $(LI $(BUGZILLA 4052): [CTFE] increment from array item)
        $(LI $(BUGZILLA 4056): Template instantiation with bare parameter not documented)
        $(LI $(BUGZILLA 4073): core.cpuid crashes)
        $(LI $(BUGZILLA 4078): [CTFE] Failed return of dynamic array item)
        $(LI $(BUGZILLA 4084): Ignored missing main() closing bracket)
        $(LI $(BUGZILLA 4109): writeln doesn't work with empty static array)
        $(LI $(BUGZILLA 4143): fix warnings in dmd build)
        $(LI $(BUGZILLA 4156): Segfault with array+=array)
        $(LI $(BUGZILLA 4169): building dmd with a modern gcc produces a buggy compiler)
        $(LI $(BUGZILLA 4175): linux.mak doesn't declare sufficient dependencies to support parallel builds)
        $(LI $(BUGZILLA 4188): std.file.remove throws Exception on success)
        $(LI $(BUGZILLA 4193): Regression 2.046, ICE(expression.c): initialising class member with const forward reference)
        $(LI $(BUGZILLA 4202): Changset 1517 doesn't compile)
        $(LI $(BUGZILLA 4207): std.cover.setDestDir does not work.)
        $(LI $(BUGZILLA 4208): druntime should not depend on Phobos)
        $(LI $(BUGZILLA 4212): DWARF: void arrays cause gdb errors)
        $(LI $(BUGZILLA 4213): Strange behaviour with static void[] arrays)
        $(LI $(BUGZILLA 4219): hasAliasing does not care about immutable)
        $(LI $(BUGZILLA 4220): I cannot apply @safe to intrinsic operation(eg: std.math.sqrt))
        $(LI $(BUGZILLA 4228): std.array.replace contains 2 bugs)
        $(LI $(BUGZILLA 4230): version(unittest))
        $(LI $(BUGZILLA 4231): Solitary opUnary Postincrement and Postdecrement user defined operators are broken.)
        $(LI $(BUGZILLA 4242): ICE(module.c): importing a module with same name as package)
        $(LI $(BUGZILLA 4249): std.regex fails to compile with debug=regex)
        $(LI $(BUGZILLA 4252): [CTFE] No array bounds checking in assignment to char[] array)
        $(LI $(BUGZILLA 4257): ICE(interpret.c): passing parameter into CTFE as ref parameter)
        $(LI $(BUGZILLA 4259): Header generation omits leading '@' for properties)
        $(LI $(BUGZILLA 4262): Header generation omits 'enum' for enum declarations)
        $(LI $(BUGZILLA 4263): Header generation omits '@system' attribute)
        $(LI $(BUGZILLA 4270): Missing line number in 'can only catch class objects' error message)
        $(LI $(BUGZILLA 4300): BigInt * int doesn't work well)
    )
)
$(CHANGELOG_NAV_INJECT)

Macros:
        VER=2.047
        TITLE=Change Log: $(VER)
